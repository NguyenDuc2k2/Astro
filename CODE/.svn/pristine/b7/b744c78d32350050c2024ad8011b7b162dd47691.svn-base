package com.globits.hivhis.rest;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.globits.hivhis.dto.PageMenuCmsDto;
import com.globits.hivhis.dto.SearchDto;
import com.globits.hivhis.service.PageMenuCmsService;

@RestController
@RequestMapping("/api/cms/pageMenu")
public class RestPageMenuCmsController {
	@Autowired
	private PageMenuCmsService pageMenuCmsService;

	@RequestMapping(value = "/searchByPage", method = RequestMethod.POST)
	public ResponseEntity<Page<PageMenuCmsDto>> searchByPage(@RequestBody SearchDto searchDto) {
		Page<PageMenuCmsDto> page = null;
		page = pageMenuCmsService.searchByPage(searchDto);

		return new ResponseEntity<>(page, HttpStatus.OK);
	}

	@PostMapping("/checkDuplicatedCode")
	public ResponseEntity<?> checkDuplicatedCode(@RequestBody PageMenuCmsDto pageMenuCmsDto) {
		boolean isDuplicatedCode = pageMenuCmsService.checkDuplicatedCode(pageMenuCmsDto);

		return new ResponseEntity<>(isDuplicatedCode == false? HttpStatus.OK : HttpStatus.BAD_REQUEST);
	}

	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public ResponseEntity<PageMenuCmsDto> getOne(@PathVariable("id") UUID id) {
		PageMenuCmsDto dto = pageMenuCmsService.getOne(id);

		return new ResponseEntity<>(dto, HttpStatus.OK);
	}

	@RequestMapping(value = "", method = RequestMethod.POST)
	public ResponseEntity<PageMenuCmsDto> saveOne(@RequestBody PageMenuCmsDto dto) {
		PageMenuCmsDto result = pageMenuCmsService.saveOrUpdate(dto, null);

		return new ResponseEntity<>(result, result != null ? HttpStatus.OK : HttpStatus.BAD_REQUEST);
	}

	@RequestMapping(value = "/{id}", method = RequestMethod.PUT)
	public ResponseEntity<PageMenuCmsDto> updateOne(@RequestBody PageMenuCmsDto dto, @PathVariable("id") UUID id) {
		PageMenuCmsDto result = pageMenuCmsService.saveOrUpdate(dto, id);

		return new ResponseEntity<>(result, result != null ? HttpStatus.OK : HttpStatus.BAD_REQUEST);
	}

	@RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
	public ResponseEntity<Boolean> deleteById(@PathVariable("id") UUID id) {
		boolean deletedSuccess = pageMenuCmsService.deleteById(id);

		return new ResponseEntity<>(deletedSuccess, deletedSuccess? HttpStatus.OK : HttpStatus.BAD_REQUEST);
	}

}
