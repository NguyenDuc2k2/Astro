package com.globits.hivhis.service.impl;

import com.globits.hivhis.Const;
import com.globits.hivhis.domain.CmsCategory;
import com.globits.hivhis.dto.CmsSearchDto;
import com.globits.hivhis.dto.home.ArticleViewDto;
import com.globits.hivhis.dto.home.CategoryViewDto;
import com.globits.hivhis.dto.home.HomePageDto;
import com.globits.hivhis.dto.home.MenuHeaderDto;
import com.globits.hivhis.repository.CmsArticleRepsitory;
import com.globits.hivhis.repository.CmsCategoryRepository;
import com.globits.hivhis.repository.PageMenuCmsRepository;
import com.globits.hivhis.service.CmsPublishService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@Service
public class CmsPublishServiceImpl implements CmsPublishService {
    @Autowired
    private PageMenuCmsRepository pageMenuCmsRepository;

    @Autowired
    private CmsCategoryRepository categoryRepository;

    @Autowired
    private CmsArticleRepsitory articleRepository;

    @PersistenceContext
    public EntityManager manager;

    @Override
    public List<MenuHeaderDto> getMenuHeader() {
        return pageMenuCmsRepository.getListMenuHeader();
    }

    @Override
    public List<CategoryViewDto> getCategoryBySlug(String slug) {
        if (slug != null) {
            CmsCategory category = categoryRepository.getCategoryBySlug(slug);
            if (category != null) {
                if (category.getParent() == null) {
                    return categoryRepository.getAllCategoryBySlug(slug);
                } else if (category.getParent().getParent() == null) {
                    return categoryRepository.getAllCategoryBySlug(slug);
                }
            }
        }
        return null;
    }

    @Override
    public Page<ArticleViewDto> getPageArticleBySlug(CmsSearchDto dto) {
        if (dto != null && dto.getSlug() != null) {
            int pageIndex = dto.getPageIndex() != null ? dto.getPageIndex() : 0;
            pageIndex = pageIndex > 0 ? pageIndex - 1 : 0;
            int pageSize = dto.getPageSize() != null ? dto.getPageSize() : 10;
            Pageable pageable = PageRequest.of(pageIndex, pageSize);
            CmsCategory category = categoryRepository.getCategoryBySlug(dto.getSlug());
            List<UUID> articleIds = this.getArticleByCategory(category);
            if (articleIds != null && articleIds.size() > 0) {
                String hql = "select new com.globits.hivhis.dto.home.ArticleViewDto(e, true) from CmsArticle e ";
                String hqlCount = "select count(e) from CmsArticle e ";
                String whereClause = " where (e.id in (:articleIds)) ";
                String orderBy = " order by e.publishDate ";
                hql += whereClause + orderBy;
                hqlCount += whereClause;
                Query query = manager.createQuery(hql, ArticleViewDto.class);
                Query queryCount = manager.createQuery(hqlCount);
                query.setParameter("articleIds", articleIds);
                queryCount.setParameter("articleIds", articleIds);
                List<ArticleViewDto> result = query.getResultList();
                long count = (long) queryCount.getSingleResult();
                return new PageImpl<>(result, pageable, count);
            }
        }
        return null;
    }

    @Override
    public HomePageDto getHomePage() {
        HomePageDto result = new HomePageDto();
        // bai viet slider
        result.setArticleSlider(articleRepository.getArticleDisplayHomePage());
        // tin tuc
        List<CategoryViewDto> listCategory = new ArrayList<>();
        CmsCategory categoryNews = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.NEWS.getValue());
        if(categoryNews != null) {
            listCategory.add(new CategoryViewDto(categoryNews));
        }
        // thong bao
        CmsCategory categoryNotifications = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.NOTIFICATIONS.getValue());
        if(categoryNotifications != null) {
            listCategory.add(new CategoryViewDto(categoryNotifications));
        }
        // phan hieu - khoa
        CmsCategory categoryPartitions = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.PARTITIONS.getValue());
        if(categoryPartitions != null) {
            listCategory.add(new CategoryViewDto(categoryPartitions));
        }
        // dao tao
        CmsCategory categoryTrain = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.TRAIN.getValue());
        if(categoryTrain != null) {
            CategoryViewDto categoryTrainDto = this.getArticleByCategorySlug(categoryTrain, 7);
            if(categoryTrainDto != null) {
                listCategory.add(categoryTrainDto);
            }
        }
        // doi ngoai
        CmsCategory categoryForeignAffair = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.FOREIGN_AFFAIR.getValue());
        if(categoryForeignAffair != null) {
            CategoryViewDto categoryForeignAffairDto = this.getArticleByCategorySlug(categoryForeignAffair, 7);
            if(categoryForeignAffairDto != null) {
                listCategory.add(categoryForeignAffairDto);
            }
        }
        // nghien cuu
        CmsCategory categoryStudy = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.STUDY.getValue());
        if(categoryStudy != null) {
            CategoryViewDto categoryStudyDto = this.getArticleByCategorySlug(categoryForeignAffair, 3);
            if(categoryStudyDto != null) {
                listCategory.add(categoryStudyDto);
            }
        }
        // su kien
        CmsCategory categoryEvent = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.EVENT.getValue());
        if(categoryEvent != null) {
            CategoryViewDto categoryEventDto = this.getArticleByCategorySlug(categoryForeignAffair, 1);
            if(categoryEventDto != null) {
                listCategory.add(categoryEventDto);
            }
        }
        // sinh vien
        CmsCategory categoryStudent = categoryRepository.getCategoryBySlug(Const.SlugHomePageEnum.STUDENT.getValue());
        if(categoryStudent != null) {
            CategoryViewDto categoryStudentDto = this.getArticleByCategorySlug(categoryStudent, 2);
            if(categoryStudentDto != null) {
                listCategory.add(categoryStudentDto);
            }
        }
        result.setListCategory(listCategory);
        return result;
    }

    private List<UUID> getArticleByCategory(CmsCategory category) {
        if (category != null && category.getId() != null) {
            String hql = "select ca.article.id from CmsCategoryArticle ca " +
                    " where (ca.category.id = :categoryId or ca.category.parent.id = :categoryId)";
            Query query = manager.createQuery(hql);
            query.setParameter("categoryId", category.getId());
            return (List<UUID>) query.getResultList();
        }
        return null;
    }

    private CategoryViewDto getArticleByCategorySlug(CmsCategory category, Integer limit) {
        CategoryViewDto result = new CategoryViewDto();
        List<UUID> articleIds = this.getArticleByCategory(category);
        if(articleIds != null && articleIds.size() > 0) {
            result.setName(category.getTitle());
            String hql = "select new com.globits.hivhis.dto.home.ArticleViewDto(ca, false) " +
                    " from CmsArticle ca where ca.id in :articleIds ";
            Query query = manager.createQuery(hql, ArticleViewDto.class);
            query.setParameter("articleIds", articleIds);
            if(limit != null) {
                query.setMaxResults(limit);
            }
            result.getArticles().addAll(query.getResultList());
            return result;
        }
        return null;
    }
}
